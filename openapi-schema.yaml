openapi: 3.0.0
info:
  title: Sapientor API
  version: 1.0.0
servers:
  - url: https://sapientor.net
paths:
  /api/gpt/authorise:
    get:
      operationId: authorise
      summary: Authorise user and retrieves user information based on a provided token.
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
          description: User authentication token.
      responses:
        '200':
          description: Successfully retrieved user information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: User ID.
                  email:
                    type: string
                    format: email
                    description: User email.
        '400':
          description: Missing or invalid token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/gpt/knowledge/{user_id}/basic:
    get:
      operationId: getBasicKnowledgeSummaries
      summary: Retrieves the last 10 knowledge summaries for a specified user.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
          description: User identifier
      responses:
        '200':
          description: Successfully retrieved the last 10 summaries.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    content:
                      type: string
                      description: The content of the summary.
                    url:
                      type: string
                      format: uri
                      description: The URL associated with the summary.
                    title:
                      type: string
                      description: The title of the summary.
        '400':
          description: Missing user_id in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Database error or retrieval failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/gpt/knowledge/{user_id}/input:
    post:
      summary: Processes input to retrieve relevant documents for a specified user.
      operationId: getRelevantDocumentsForInput
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
          description: User identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
                  description: Input text to process and find relevant information.
      responses:
        '200':
          description: Successfully processed input and returned relevant information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: The result of processing the input.
        '400':
          description: Input validation error. Either 'input' or 'user_id' is missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access. Invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/gpt/summary:
    post:
      operationId: saveSummary
      summary: Saves a summary & source.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                  description: URL of the content.
                title:
                  type: string
                  description: Title of the content.
                description:
                  type: string
                  description: Description of the content.
                content:
                  type: string
                  description: The actual content to be saved.
                user_id:
                  type: string
                  description: User identifier.
              required:
                - url
                - title
                - description
                - content
                - user_id
      responses:
        '200':
          description: Successfully saved the source and content.
          content:
            application/json:
              schema:
                type: object
                properties:
                  source:
                    type: object
                    description: Details of the saved source.
                  storedIds:
                    type: array
                    items:
                      type: string
                    description: Array of stored document IDs.
        '400':
          description: Bad request - missing fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                paths:
  /api/gpt/link:
    post:
      operationId: saveLink
      summary: Saves a complex link.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                  description: The URL to be processed.
                user_id:
                  type: string
                  description: The user identifier for whom the link is being processed.
              required:
                - url
                - user_id
      responses:
        '200':
          description: Successfully created the link with an estimate.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      link:
                        type: object
                        properties:
                          url:
                            type: string
                            format: uri
                            description: The URL processed.
                          estimate:
                            type: object
                            properties:
                              time:
                                type: integer
                                format: int64
                                description: Estimated time in milliseconds.
                              deadline:
                                type: string
                                format: date-time
                                description: The deadline date and time in ISO 8601 format.
                              humanReadable:
                                type: string
                                description: Human-readable format of the estimated time.
                          title:
                            type: string
                            description: Title of the link, default is the URL itself.
                          user_id:
                            type: string
                            description: The user identifier associated with this link.
                        required:
                          - url
                          - estimate
                          - title
                          - user_id
        '400':
          description: Bad request due to missing URL or user ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access due to incorrect or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error during the link creation process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message.
